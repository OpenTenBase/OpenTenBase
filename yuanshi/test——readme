# 测评
## 1、OpenTenBase集群环境的搭建:
评分：7/10
原因：OpenTenBase集群环境的搭建相对复杂，需要用户具备一定的技术背景和配置经验。虽然有详细的文档和指导，但相比MySQL的简易性和MongoDB的自动化配置，搭建过程仍可能涉及到一些技术挑战。

## 2、OpenTenBase组件安装及管理:
评分：6/10
原因：组件的安装和管理相对于传统的SQL数据库（如MySQL）和NoSQL数据库（如MongoDB）来说，可能需要更多的手动配置和定制化工作。缺乏直观的管理界面和自动化工具，可能增加了用户的操作复杂度。

## 3、分布式数据自动shard分片:
评分：8/10
原因：OpenTenBase在分片数据管理方面表现良好，能够自动化处理数据分布和负载均衡，提升了系统的查询效率和性能。

## 4、分布式数据库复制表关联查询:
评分：7/10
原因：复制表关联查询在OpenTenBase中可以实现，但可能需要更多的优化和配置来确保多节点数据同步和查询效率，相较于MySQL和MongoDB的成熟性仍有提升空间。

## 5、分布式事务全局一致性:
评分：6/10
原因：OpenTenBase在分布式事务管理上可能需要更多的性能投入和配置，以确保全局一致性，这在高并发和复杂事务处理场景下可能存在一定的挑战。

## 6、高性能自研分区表:
评分：7/10
原因：自研分区表能够优化数据存储和管理，但在大规模数据和高并发访问下，可能需要更精细的优化和调整，以确保性能的稳定和高效。

## 7、冷热分离存储:
评分：8/10
原因：OpenTenBase在冷热数据分离上做得相对较好，能够有效降低存储成本和提升数据访问效率，这在大数据处理场景下尤为重要。

## 8、多核并行计算能力:
评分：7/10
原因：OpenTenBase在多核并行计算能力上有一定优势，但相比MySQL和MongoDB的优化可能稍显不足，需要更多的性能调优和并行处理策略。

## 9、子查询转化join能力:
评分：6/10
原因：在处理子查询转换为join操作时，OpenTenBase可能需要更多的优化和查询计划调整，以提升复杂查询的效率和响应速度。

## 10、Bug或体验欠佳之处:
评分：6/10
执行 make check 的时候，会有一些测试无法通过；
uuid-devel匹配不到，存在依赖环境没有等报错bug，需要二次查找并修改

# 总结
总分71/100分，整体按照教程和直播回放进行操作需要一定技术门槛，问题不是很大，但是如果是数据库初学者我觉得还是会选择Mysql等传统数据库，虽然OpentenBase在处理复杂等多核任务上有独特优势可，但是还有很长的路要走，入门门槛以及使用人群都还没有普及。在查看issue的时候发现有国外开发者对OpentenBase主要语言为中文提出异议，而且绝大多数issue提出者都是国外，让人很有感触。不管怎么说，相开源社区等搭建维护以及人员数量，国外还是很有优势。
我能看出OpentenBase“国产化”的努力和决心，但是任重而道远，祝OpentenBase越走越远，
