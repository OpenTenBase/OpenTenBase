drop table if exists test_vec;
NOTICE:  table "test_vec" does not exist, skipping
create table test_vec(i int2);
insert into test_vec values (generate_series(-10,15));
select avg(i) from test_vec;
        avg         
--------------------
 2.5000000000000000
(1 row)

select sum(i) from test_vec;
 sum 
-----
  65
(1 row)

select max(i) from test_vec;
 max 
-----
  15
(1 row)

select min(i) from test_vec;
 min 
-----
 -10
(1 row)

drop table if exists test_vec;
create table test_vec(i int4);
insert into test_vec values (generate_series(-10,15));
select avg(i) from test_vec;
        avg         
--------------------
 2.5000000000000000
(1 row)

select sum(i) from test_vec;
 sum 
-----
  65
(1 row)

select max(i) from test_vec;
 max 
-----
  15
(1 row)

select min(i) from test_vec;
 min 
-----
 -10
(1 row)

drop table if exists test_vec;
create table test_vec(i int8);
insert into test_vec values (generate_series(-10,15));
select avg(i) from test_vec;
        avg         
--------------------
 2.5000000000000000
(1 row)

select sum(i) from test_vec;
 sum 
-----
  65
(1 row)

select max(i) from test_vec;
 max 
-----
  15
(1 row)

select min(i) from test_vec;
 min 
-----
 -10
(1 row)

drop table if exists test_vec;
create table test_vec(i float4);
insert into test_vec values (generate_series(-10,15));
select avg(i) from test_vec;
 avg 
-----
 2.5
(1 row)

select sum(i) from test_vec;
 sum 
-----
  65
(1 row)

select max(i) from test_vec;
 max 
-----
  15
(1 row)

select min(i) from test_vec;
 min 
-----
 -10
(1 row)

drop table if exists test_vec;
create table test_vec(i float8);
insert into test_vec values (generate_series(-10,15));
select avg(i) from test_vec;
 avg 
-----
 2.5
(1 row)

select sum(i) from test_vec;
 sum 
-----
  65
(1 row)

select max(i) from test_vec;
 max 
-----
  15
(1 row)

select min(i) from test_vec;
 min 
-----
 -10
(1 row)

drop table if exists test_vec;
create table test_vec(i numeric);
insert into test_vec values (generate_series(-10,15));
select avg(i) from test_vec;
        avg         
--------------------
 2.5000000000000000
(1 row)

select sum(i) from test_vec;
 sum 
-----
  65
(1 row)

select max(i) from test_vec;
 max 
-----
  15
(1 row)

select min(i) from test_vec;
 min 
-----
 -10
(1 row)

insert into test_vec values (9223372036854775808);
select avg(i) from test_vec;
        avg         
--------------------
 341606371735362069
(1 row)

select sum(i) from test_vec;
         sum         
---------------------
 9223372036854775873
(1 row)

select max(i) from test_vec;
         max         
---------------------
 9223372036854775808
(1 row)

select min(i) from test_vec;
 min 
-----
 -10
(1 row)

insert into test_vec values (170141183460469231731687303715884105728);
select avg(i) from test_vec;
                  avg                  
---------------------------------------
 6076470837873901133603952705454960057
(1 row)

select sum(i) from test_vec;
                   sum                   
-----------------------------------------
 170141183460469231740910675752738881601
(1 row)

select max(i) from test_vec;
                   max                   
-----------------------------------------
 170141183460469231731687303715884105728
(1 row)

select min(i) from test_vec;
 min 
-----
 -10
(1 row)

drop table if exists test_vec;
create table test_vec(i oid);
insert into test_vec values (generate_series(1,10));
select avg(i) from test_vec;
ERROR:  function avg(oid) does not exist
LINE 1: select avg(i) from test_vec;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select sum(i) from test_vec;
ERROR:  function sum(oid) does not exist
LINE 1: select sum(i) from test_vec;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select max(i) from test_vec;
 max 
-----
  10
(1 row)

select min(i) from test_vec;
 min 
-----
   1
(1 row)

drop table if exists test_vec;
create table test_vec(i date);
insert into test_vec values ('1957-04-09');
insert into test_vec values ('1957-06-13');
select avg(i) from test_vec;
ERROR:  function avg(date) does not exist
LINE 1: select avg(i) from test_vec;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- select sum(i) from test_vec;
select max(i) from test_vec;
    max     
------------
 06-13-1957
(1 row)

select min(i) from test_vec;
    min     
------------
 04-09-1957
(1 row)

drop table if exists test_vec;
create table test_vec(i time);
insert into test_vec values ('00:00');
insert into test_vec values ('01:00');
select avg(i) from test_vec;
    avg    
-----------
 @ 30 mins
(1 row)

select sum(i) from test_vec;
   sum    
----------
 @ 1 hour
(1 row)

select max(i) from test_vec;
   max    
----------
 01:00:00
(1 row)

select min(i) from test_vec;
   min    
----------
 00:00:00
(1 row)

drop table if exists test_vec;
create table test_vec(i time with time zone);
insert into test_vec values ('00:01 PDT');
insert into test_vec values ('01:00 PDT');
select avg(i) from test_vec;
ERROR:  function avg(time with time zone) does not exist
LINE 1: select avg(i) from test_vec;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select sum(i) from test_vec;
ERROR:  function sum(time with time zone) does not exist
LINE 1: select sum(i) from test_vec;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select max(i) from test_vec;
     max     
-------------
 01:00:00-07
(1 row)

select min(i) from test_vec;
     min     
-------------
 00:01:00-07
(1 row)

drop table if exists test_vec;
create table test_vec(i text);
insert into test_vec values ('hello world');
insert into test_vec values ('goodbye world');
-- select sum(i) from test_vec;
select max(i) from test_vec;
     max     
-------------
 hello world
(1 row)

select min(i) from test_vec;
      min      
---------------
 goodbye world
(1 row)

drop table if exists test_vec;
create table test_vec(i bpchar);
insert into test_vec values ('a');
insert into test_vec values ('A');
select avg(i) from test_vec;
ERROR:  function avg(character) does not exist
LINE 1: select avg(i) from test_vec;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- select sum(i) from test_vec;
select max(i) from test_vec;
 max 
-----
 A
(1 row)

select min(i) from test_vec;
 min 
-----
 a
(1 row)

drop table if exists test_vec;
create table test_vec(i money);
insert into test_vec values ('$223.459');
insert into test_vec values ('$323.459');
select avg(i) from test_vec;
ERROR:  function avg(money) does not exist
LINE 1: select avg(i) from test_vec;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select sum(i) from test_vec;
   sum   
---------
 $546.92
(1 row)

select max(i) from test_vec;
   max   
---------
 $323.46
(1 row)

select min(i) from test_vec;
   min   
---------
 $223.46
(1 row)

SET DATESTYLE = 'ISO';
SET IntervalStyle to postgres;
drop table if exists test_vec;
create table test_vec(i interval);
insert into test_vec (i) values ('@ 1 minute');
insert into test_vec (i) values ('@ 5 hour');
insert into test_vec (i) values ('@ 10 day');
insert into test_vec (i) values ('@ 34 year');
insert into test_vec (i) values ('@ 3 months');
insert into test_vec (i) values ('@ 14 seconds ago');
insert into test_vec (i) values ('1 day 2 hours 3 minutes 4 seconds');
insert into test_vec (i) values ('6 years');
insert into test_vec (i) values ('5 months');
insert into test_vec (i) values ('5 months 12 hours');
select avg(i) from test_vec;
              avg               
--------------------------------
 4 years 1 mon 10 days 04:18:23
(1 row)

select sum(i) from test_vec;
               sum               
---------------------------------
 41 years 1 mon 11 days 19:03:50
(1 row)

select max(i) from test_vec;
   max    
----------
 34 years
(1 row)

select min(i) from test_vec;
    min    
-----------
 -00:00:14
(1 row)

drop table if exists test_vec;
RESET DATESTYLE;
RESET IntervalStyle;
create table test_vec(i timestamp);
insert into test_vec values ('2022-06-28 11:42:42.970617');
insert into test_vec values ('2022-06-28 00:00:00');
select avg(i) from test_vec;
ERROR:  function avg(timestamp without time zone) does not exist
LINE 1: select avg(i) from test_vec;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- select sum(i) from test_vec;
select max(i) from test_vec;
               max               
---------------------------------
 Tue Jun 28 11:42:42.970617 2022
(1 row)

select min(i) from test_vec;
           min            
--------------------------
 Tue Jun 28 00:00:00 2022
(1 row)

drop table if exists test_vec;
create table test_vec(i int2[]);
insert into test_vec values ('{1,2,3,4,5}' );
insert into test_vec values ('{6,7,8,9,10}' );
select avg(i) from test_vec;
ERROR:  function avg(smallint[]) does not exist
LINE 1: select avg(i) from test_vec;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select sum(i) from test_vec;
ERROR:  function sum(smallint[]) does not exist
LINE 1: select sum(i) from test_vec;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select max(i) from test_vec;
     max      
--------------
 {6,7,8,9,10}
(1 row)

select min(i) from test_vec;
     min     
-------------
 {1,2,3,4,5}
(1 row)

drop table if exists test_vec;
create table test_vec (c cidr, i inet);
insert into test_vec values ('192.168.1', '192.168.1.226/24');
insert into test_vec values ('192.168.1.0/26', '192.168.1.226');
select avg(i) from test_vec;
ERROR:  function avg(inet) does not exist
LINE 1: select avg(i) from test_vec;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select sum(i) from test_vec;
ERROR:  function sum(inet) does not exist
LINE 1: select sum(i) from test_vec;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select max(i) from test_vec;
      max      
---------------
 192.168.1.226
(1 row)

select min(i) from test_vec;
       min        
------------------
 192.168.1.226/24
(1 row)

drop table if exists test_vec;
-- 1020385652107939887
create table bug_count_distinct_toast(f1 int,f2 text,f3 varchar(32),f4 varchar(160),f5 varchar(320),primary key (f1));
alter table bug_count_distinct_toast alter column f2 set storage EXTERNAL;
insert into bug_count_distinct_toast select t,repeat('或者无法得到更好的结果的时候才停止',1000),md5(random()::text),repeat(md5(random()::text),5),repeat(md5(random()::text),10) from generate_series(1,10) as t;
insert into bug_count_distinct_toast select t,repeat('无法得到更好的结果',1000),md5(random()::text),repeat(md5(random()::text),5),repeat(md5(random()::text),10) from generate_series(11,20) as t;
explain (verbose, costs off) select count(distinct f2) from bug_count_distinct_toast;
                          QUERY PLAN                           
---------------------------------------------------------------
 Finalize Aggregate
   Output: count(DISTINCT_H f2)
   ->  Remote Subquery Scan[1] on all (datanode_1,datanode_2)
         Output: (PARTIAL count(DISTINCT_H f2))
         ->  Partial Aggregate
               Output: PARTIAL count(DISTINCT_H f2)
               ->  Seq Scan on public.bug_count_distinct_toast
                     Output: f1, f2, f3, f4, f5
(8 rows)

select count(distinct f2) from bug_count_distinct_toast;
 count 
-------
     2
(1 row)

set distinct_with_hash = off;
explain (verbose, costs off) select count(distinct f2) from bug_count_distinct_toast;
                          QUERY PLAN                           
---------------------------------------------------------------
 Finalize Aggregate
   Output: count(DISTINCT_S f2)
   ->  Remote Subquery Scan[1] on all (datanode_1,datanode_2)
         Output: (PARTIAL count(DISTINCT_S f2))
         ->  Partial Aggregate
               Output: PARTIAL count(DISTINCT_S f2)
               ->  Seq Scan on public.bug_count_distinct_toast
                     Output: f1, f2, f3, f4, f5
(8 rows)

select count(distinct f2) from bug_count_distinct_toast;
 count 
-------
     2
(1 row)

reset distinct_with_hash;
drop table bug_count_distinct_toast;
