\c regression_ora
select * from (select string_to_array('a b cd ef', ' '));
 STRING_TO_ARRAY 
-----------------
 {a,b,cd,ef}
(1 row)

select * from table((select string_to_array('a b cd ef', ' ')));
 COLUMN_VALUE 
--------------
 a
 b
 cd
 ef
(4 rows)

select * from table(select string_to_array('a b cd ef', ' '));
 COLUMN_VALUE 
--------------
 a
 b
 cd
 ef
(4 rows)

-- The subquery must return a collection type
select * from table(select '{1}'::int[]);
 COLUMN_VALUE 
--------------
            1
(1 row)

select * from table(select '{1,2}'::int[]);
 COLUMN_VALUE 
--------------
            1
            2
(2 rows)

select * from table(select 1); -- error
ERROR:  function UNNEST(INTEGER) does not exist
LINE 1: select * from table(select 1);
                      ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- The SELECT list of the subquery must contain exactly one item
select * from table(select string_to_array('a b cd ef', ' '));
 COLUMN_VALUE 
--------------
 a
 b
 cd
 ef
(4 rows)

select * from table(select 1, string_to_array('a b cd ef', ' ')); -- error
ERROR:  subquery must return only one column
LINE 1: select * from table(select 1, string_to_array('a b cd ef', '...
                      ^
-- The subquery must return only a single collection
select * from table((select string_to_array('a b cd ef', ' ') from (select * from generate_series(1, 1))));
 COLUMN_VALUE 
--------------
 a
 b
 cd
 ef
(4 rows)

select * from table((select string_to_array('a b cd ef', ' ') from (select * from generate_series(1, 2)))); -- error
ERROR:  more than one row returned by a subquery used as an expression
