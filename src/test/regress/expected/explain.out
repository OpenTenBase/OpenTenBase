--
-- EXPLAIN
--
-- There are many test cases elsewhere that use EXPLAIN as a vehicle for
-- checking something else (usually planner behavior).  This file is
-- concerned with testing EXPLAIN in its own right.
--
-- To produce stable regression test output, it's usually necessary to
-- ignore details such as exact costs or row counts.  These filter
-- functions replace changeable output details with fixed strings.
create function explain_filter(text) returns setof text
language plpgsql as
$$
declare
    ln text;
begin
    for ln in execute $1
    loop
        -- Replace any numeric word with just 'N'
        ln := regexp_replace(ln, '\m\d+\M', 'N', 'g');
        -- In sort output, the above won't match units-suffixed numbers
        ln := regexp_replace(ln, '\m\d+kB', 'NkB', 'g');
        -- For query_mem
        ln := regexp_replace(ln, '\m\d+MB', 'NMB', 'g');
        -- Text-mode buffers output varies depending on the system state
        ln := regexp_replace(ln, '^( +Buffers: shared)( hit=N)?( read=N)?', '\1 [read]');
        return next ln;
    end loop;
end;
$$;
-- To produce valid JSON output, replace numbers with "0" or "0.0" not "N"
create function explain_filter_to_json(text) returns jsonb
language plpgsql as
$$
declare
    data text := '';
    ln text;
begin
    for ln in execute $1
    loop
        -- Replace any numeric word with just '0'
        ln := regexp_replace(ln, '\m\d+\M', '0', 'g');
        data := data || ln;
    end loop;
    return data::jsonb;
end;
$$;
-- Simple cases
select explain_filter('explain select * from int8_tbl i8');
                        explain_filter                         
---------------------------------------------------------------
 Remote Fast Query Execution
   Node/s: datanode_1
   ->  Seq Scan on int8_tbl i8  (cost=N.N..N.N rows=N width=N)
(3 rows)

select explain_filter('explain (analyze) select * from int8_tbl i8');
                          explain_filter                           
-------------------------------------------------------------------
 Remote Fast Query Execution (actual time=N.N..N.N rows=N loops=N)
   Node/s: datanode_1
 Planning Time: N.N ms
 Query Memory: execution query_mem NMB
 Execution Time: N.N ms
(5 rows)

select explain_filter('explain (analyze, verbose) select * from int8_tbl i8');
                          explain_filter                           
-------------------------------------------------------------------
 Remote Fast Query Execution (actual time=N.N..N.N rows=N loops=N)
   Output: i8.q1, i8.q2
   Node/s: datanode_1
   Remote query: SELECT q1, q2 FROM public.int8_tbl i8
 Planning Time: N.N ms
 Query Memory: execution query_mem NMB
 Execution Time: N.N ms
(7 rows)

select explain_filter('explain (analyze, buffers, format text) select * from int8_tbl i8');
                          explain_filter                           
-------------------------------------------------------------------
 Remote Fast Query Execution (actual time=N.N..N.N rows=N loops=N)
   Node/s: datanode_1
 Planning Time: N.N ms
 Query Memory: execution query_mem NMB
 Execution Time: N.N ms
(5 rows)

select explain_filter('explain (analyze, buffers, format json) select * from int8_tbl i8');
                  explain_filter                   
---------------------------------------------------
 [                                                +
   {                                              +
     "Plan": {                                    +
       "Node Type": "Remote Fast Query Execution",+
       "Parallel Aware": false,                   +
       "Actual Startup Time": N.N,                +
       "Actual Total Time": N.N,                  +
       "exec_enter": N.N,                         +
       "exec_startup": N.N,                       +
       "exec_total": N.N,                         +
       "Actual Rows": N,                          +
       "Actual Loops": N,                         +
       "Node/s": "datanode_1",                    +
       "Shared Hit Blocks": N,                    +
       "Shared Read Blocks": N,                   +
       "Shared Dirtied Blocks": N,                +
       "Shared Written Blocks": N,                +
       "Local Hit Blocks": N,                     +
       "Local Read Blocks": N,                    +
       "Local Dirtied Blocks": N,                 +
       "Local Written Blocks": N,                 +
       "Temp Read Blocks": N,                     +
       "Temp Written Blocks": N                   +
     },                                           +
     "Planning": {                                +
       "Shared Hit Blocks": N,                    +
       "Shared Read Blocks": N,                   +
       "Shared Dirtied Blocks": N,                +
       "Shared Written Blocks": N,                +
       "Local Hit Blocks": N,                     +
       "Local Read Blocks": N,                    +
       "Local Dirtied Blocks": N,                 +
       "Local Written Blocks": N,                 +
       "Temp Read Blocks": N,                     +
       "Temp Written Blocks": N                   +
     },                                           +
     "Planning Time": N.N,                        +
     "Triggers": [                                +
     ],                                           +
     "Execution Time": N.N                        +
   }                                              +
 ]
(1 row)

select explain_filter('explain (analyze, buffers, format xml) select * from int8_tbl i8');
                      explain_filter                      
----------------------------------------------------------
 <explain xmlns="http://www.postgresql.org/N/explain">   +
   <Query>                                               +
     <Plan>                                              +
       <Node-Type>Remote Fast Query Execution</Node-Type>+
       <Parallel-Aware>false</Parallel-Aware>            +
       <Actual-Startup-Time>N.N</Actual-Startup-Time>    +
       <Actual-Total-Time>N.N</Actual-Total-Time>        +
       <Actual-Rows>N</Actual-Rows>                      +
       <Actual-Loops>N</Actual-Loops>                    +
       <Node-s>datanode_1</Node-s>                       +
       <Shared-Hit-Blocks>N</Shared-Hit-Blocks>          +
       <Shared-Read-Blocks>N</Shared-Read-Blocks>        +
       <Shared-Dirtied-Blocks>N</Shared-Dirtied-Blocks>  +
       <Shared-Written-Blocks>N</Shared-Written-Blocks>  +
       <Local-Hit-Blocks>N</Local-Hit-Blocks>            +
       <Local-Read-Blocks>N</Local-Read-Blocks>          +
       <Local-Dirtied-Blocks>N</Local-Dirtied-Blocks>    +
       <Local-Written-Blocks>N</Local-Written-Blocks>    +
       <Temp-Read-Blocks>N</Temp-Read-Blocks>            +
       <Temp-Written-Blocks>N</Temp-Written-Blocks>      +
     </Plan>                                             +
     <Planning>                                          +
       <Shared-Hit-Blocks>N</Shared-Hit-Blocks>          +
       <Shared-Read-Blocks>N</Shared-Read-Blocks>        +
       <Shared-Dirtied-Blocks>N</Shared-Dirtied-Blocks>  +
       <Shared-Written-Blocks>N</Shared-Written-Blocks>  +
       <Local-Hit-Blocks>N</Local-Hit-Blocks>            +
       <Local-Read-Blocks>N</Local-Read-Blocks>          +
       <Local-Dirtied-Blocks>N</Local-Dirtied-Blocks>    +
       <Local-Written-Blocks>N</Local-Written-Blocks>    +
       <Temp-Read-Blocks>N</Temp-Read-Blocks>            +
       <Temp-Written-Blocks>N</Temp-Written-Blocks>      +
     </Planning>                                         +
     <Planning-Time>N.N</Planning-Time>                  +
     <Triggers>                                          +
     </Triggers>                                         +
     <Execution-Time>N.N</Execution-Time>                +
   </Query>                                              +
 </explain>
(1 row)

select explain_filter('explain (analyze, buffers, format yaml) select * from int8_tbl i8');
                explain_filter                
----------------------------------------------
 - Plan:                                     +
     Node Type: "Remote Fast Query Execution"+
     Parallel Aware: false                   +
     Actual Startup Time: N.N                +
     Actual Total Time: N.N                  +
     Actual Rows: N                          +
     Actual Loops: N                         +
     Node/s: "datanode_1"                    +
     Shared Hit Blocks: N                    +
     Shared Read Blocks: N                   +
     Shared Dirtied Blocks: N                +
     Shared Written Blocks: N                +
     Local Hit Blocks: N                     +
     Local Read Blocks: N                    +
     Local Dirtied Blocks: N                 +
     Local Written Blocks: N                 +
     Temp Read Blocks: N                     +
     Temp Written Blocks: N                  +
   Planning:                                 +
     Shared Hit Blocks: N                    +
     Shared Read Blocks: N                   +
     Shared Dirtied Blocks: N                +
     Shared Written Blocks: N                +
     Local Hit Blocks: N                     +
     Local Read Blocks: N                    +
     Local Dirtied Blocks: N                 +
     Local Written Blocks: N                 +
     Temp Read Blocks: N                     +
     Temp Written Blocks: N                  +
   Planning Time: N.N                        +
   Triggers:                                 +
   Execution Time: N.N
(1 row)

select explain_filter('explain (buffers, format json) select * from int8_tbl i8');
                  explain_filter                   
---------------------------------------------------
 [                                                +
   {                                              +
     "Plan": {                                    +
       "Node Type": "Remote Fast Query Execution",+
       "Parallel Aware": false,                   +
       "Node/s": "datanode_1",                    +
       "Remote plan": [                           +
         {                                        +
           "Plan": {                              +
             "Node Type": "Seq Scan",             +
             "Parallel Aware": false,             +
             "Relation Name": "int8_tbl",         +
             "Alias": "i8",                       +
             "Startup Cost": N.N,                 +
             "Total Cost": N.N,                   +
             "Plan Rows": N,                      +
             "Plan Width": N,                     +
             "Shared Hit Blocks": N,              +
             "Shared Read Blocks": N,             +
             "Shared Dirtied Blocks": N,          +
             "Shared Written Blocks": N,          +
             "Local Hit Blocks": N,               +
             "Local Read Blocks": N,              +
             "Local Dirtied Blocks": N,           +
             "Local Written Blocks": N,           +
             "Temp Read Blocks": N,               +
             "Temp Written Blocks": N             +
           },                                     +
           "Planning": {                          +
             "Shared Hit Blocks": N,              +
             "Shared Read Blocks": N,             +
             "Shared Dirtied Blocks": N,          +
             "Shared Written Blocks": N,          +
             "Local Hit Blocks": N,               +
             "Local Read Blocks": N,              +
             "Local Dirtied Blocks": N,           +
             "Local Written Blocks": N,           +
             "Temp Read Blocks": N,               +
             "Temp Written Blocks": N             +
           }                                      +
         }                                        +
       ]                                          +
       ,                                          +
       "Shared Hit Blocks": N,                    +
       "Shared Read Blocks": N,                   +
       "Shared Dirtied Blocks": N,                +
       "Shared Written Blocks": N,                +
       "Local Hit Blocks": N,                     +
       "Local Read Blocks": N,                    +
       "Local Dirtied Blocks": N,                 +
       "Local Written Blocks": N,                 +
       "Temp Read Blocks": N,                     +
       "Temp Written Blocks": N                   +
     },                                           +
     "Planning": {                                +
       "Shared Hit Blocks": N,                    +
       "Shared Read Blocks": N,                   +
       "Shared Dirtied Blocks": N,                +
       "Shared Written Blocks": N,                +
       "Local Hit Blocks": N,                     +
       "Local Read Blocks": N,                    +
       "Local Dirtied Blocks": N,                 +
       "Local Written Blocks": N,                 +
       "Temp Read Blocks": N,                     +
       "Temp Written Blocks": N                   +
     }                                            +
   }                                              +
 ]
(1 row)

--
-- Test production of per-worker data
--
-- Unfortunately, because we don't know how many worker processes we'll
-- actually get (maybe none at all), we can't examine the "Workers" output
-- in any detail.  We can check that it parses correctly as JSON, and then
-- remove it from the displayed results.
-- Serializable isolation would disable parallel query, so explicitly use an
-- arbitrary other level.
begin isolation level repeatable read;
-- encourage use of parallel plans
set parallel_setup_cost=0;
set parallel_tuple_cost=0;
set min_parallel_table_scan_size=0;
set max_parallel_workers_per_gather=4;
select jsonb_pretty(
  explain_filter_to_json('explain (analyze, verbose, buffers, format json)
                         select * from tenk1 order by tenthous')
  -- remove "Workers" node of the Seq Scan plan node
  #- '{0,Plan,Plans,0,Plans,0,Workers}'
  -- remove "Workers" node of the Sort plan node
  #- '{0,Plan,Plans,0,Workers}'
  -- Also remove its sort-type fields, as those aren't 100% stable
  #- '{0,Plan,Plans,0,Sort Method}'
  #- '{0,Plan,Plans,0,Sort Space Type}'
);
                            jsonb_pretty                             
---------------------------------------------------------------------
 [                                                                  +
     {                                                              +
         "Plan": {                                                  +
             "DN": {                                                +
                 "datanode_1": {                                    +
                     "rows": 0,                                     +
                     "loops": 0,                                    +
                     "total": 0.0,                                  +
                     "startup": 0.0,                                +
                     "exec_enter": 0.0,                             +
                     "exec_total": 0.0,                             +
                     "exec_startup": 0.0                            +
                 },                                                 +
                 "datanode_2": {                                    +
                     "rows": 0,                                     +
                     "loops": 0,                                    +
                     "total": 0.0,                                  +
                     "startup": 0.0,                                +
                     "exec_enter": 0.0,                             +
                     "exec_total": 0.0,                             +
                     "exec_startup": 0.0                            +
                 }                                                  +
             },                                                     +
             "Plans": [                                             +
                 {                                                  +
                     "DN": {                                        +
                         "datanode_1": {                            +
                             "rows": 0,                             +
                             "loops": 0,                            +
                             "total": 0.0,                          +
                             "startup": 0.0,                        +
                             "exec_enter": 0.0,                     +
                             "exec_total": 0.0,                     +
                             "exec_startup": 0.0                    +
                         },                                         +
                         "datanode_2": {                            +
                             "rows": 0,                             +
                             "loops": 0,                            +
                             "total": 0.0,                          +
                             "startup": 0.0,                        +
                             "exec_enter": 0.0,                     +
                             "exec_total": 0.0,                     +
                             "exec_startup": 0.0                    +
                         }                                          +
                     },                                             +
                     "Plans": [                                     +
                         {                                          +
                             "DN": {                                +
                                 "datanode_1": {                    +
                                     "rows": 0,                     +
                                     "loops": 0,                    +
                                     "total": 0.0,                  +
                                     "startup": 0.0,                +
                                     "exec_enter": 0.0,             +
                                     "exec_total": 0.0,             +
                                     "exec_startup": 0.0            +
                                 },                                 +
                                 "datanode_2": {                    +
                                     "rows": 0,                     +
                                     "loops": 0,                    +
                                     "total": 0.0,                  +
                                     "startup": 0.0,                +
                                     "exec_enter": 0.0,             +
                                     "exec_total": 0.0,             +
                                     "exec_startup": 0.0            +
                                 }                                  +
                             },                                     +
                             "Plans": [                             +
                                 {                                  +
                                     "DN": {                        +
                                         "datanode_1": {            +
                                             "rows": 0,             +
                                             "loops": 0,            +
                                             "total": 0.0,          +
                                             "startup": 0.0,        +
                                             "exec_enter": 0.0,     +
                                             "exec_total": 0.0,     +
                                             "exec_startup": 0.0    +
                                         },                         +
                                         "datanode_2": {            +
                                             "rows": 0,             +
                                             "loops": 0,            +
                                             "total": 0.0,          +
                                             "startup": 0.0,        +
                                             "exec_enter": 0.0,     +
                                             "exec_total": 0.0,     +
                                             "exec_startup": 0.0    +
                                         }                          +
                                     },                             +
                                     "Alias": "tenk1",              +
                                     "Output": [                    +
                                         "unique1",                 +
                                         "unique2",                 +
                                         "two",                     +
                                         "four",                    +
                                         "ten",                     +
                                         "twenty",                  +
                                         "hundred",                 +
                                         "thousand",                +
                                         "twothousand",             +
                                         "fivethous",               +
                                         "tenthous",                +
                                         "odd",                     +
                                         "even",                    +
                                         "stringu1",                +
                                         "stringu2",                +
                                         "string4"                  +
                                     ],                             +
                                     "Schema": "public",            +
                                     "Node Type": "Seq Scan",       +
                                     "Plan Rows": 0,                +
                                     "Plan Width": 0,               +
                                     "Total Cost": 0.0,             +
                                     "exec_enter": 0.0,             +
                                     "exec_total": 0.0,             +
                                     "Actual Rows": 0,              +
                                     "worker_info": {               +
                                         "datanode_1": {            +
                                             "0": {                 +
                                                 "rows": 0,         +
                                                 "loops": 0,        +
                                                 "total": 0.0,      +
                                                 "startup": 0.0,    +
                                                 "exec_enter": 0.0, +
                                                 "exec_total": 0.0, +
                                                 "exec_startup": 0.0+
                                             }                      +
                                         },                         +
                                         "datanode_2": {            +
                                             "0": {                 +
                                                 "rows": 0,         +
                                                 "loops": 0,        +
                                                 "total": 0.0,      +
                                                 "startup": 0.0,    +
                                                 "exec_enter": 0.0, +
                                                 "exec_total": 0.0, +
                                                 "exec_startup": 0.0+
                                             }                      +
                                         }                          +
                                     },                             +
                                     "Actual Loops": 0,             +
                                     "Startup Cost": 0.0,           +
                                     "exec_startup": 0.0,           +
                                     "Relation Name": "tenk1",      +
                                     "Parallel Aware": true,        +
                                     "Local Hit Blocks": 0,         +
                                     "Temp Read Blocks": 0,         +
                                     "Actual Total Time": 0.0,      +
                                     "Local Read Blocks": 0,        +
                                     "Shared Hit Blocks": 0,        +
                                     "Shared Read Blocks": 0,       +
                                     "Actual Startup Time": 0.0,    +
                                     "Parent Relationship": "Outer",+
                                     "Temp Written Blocks": 0,      +
                                     "Local Dirtied Blocks": 0,     +
                                     "Local Written Blocks": 0,     +
                                     "Shared Dirtied Blocks": 0,    +
                                     "Shared Written Blocks": 0     +
                                 }                                  +
                             ],                                     +
                             "Output": [                            +
                                 "unique1",                         +
                                 "unique2",                         +
                                 "two",                             +
                                 "four",                            +
                                 "ten",                             +
                                 "twenty",                          +
                                 "hundred",                         +
                                 "thousand",                        +
                                 "twothousand",                     +
                                 "fivethous",                       +
                                 "tenthous",                        +
                                 "odd",                             +
                                 "even",                            +
                                 "stringu1",                        +
                                 "stringu2",                        +
                                 "string4"                          +
                             ],                                     +
                             "Sort Key": [                          +
                                 "tenk1.tenthous"                   +
                             ],                                     +
                             "Node Type": "Sort",                   +
                             "Plan Rows": 0,                        +
                             "Plan Width": 0,                       +
                             "Total Cost": 0.0,                     +
                             "exec_enter": 0.0,                     +
                             "exec_total": 0.0,                     +
                             "Actual Rows": 0,                      +
                             "worker_info": {                       +
                                 "datanode_1": {                    +
                                     "0": {                         +
                                         "rows": 0,                 +
                                         "loops": 0,                +
                                         "total": 0.0,              +
                                         "startup": 0.0,            +
                                         "exec_enter": 0.0,         +
                                         "exec_total": 0.0,         +
                                         "exec_startup": 0.0        +
                                     }                              +
                                 },                                 +
                                 "datanode_2": {                    +
                                     "0": {                         +
                                         "rows": 0,                 +
                                         "loops": 0,                +
                                         "total": 0.0,              +
                                         "startup": 0.0,            +
                                         "exec_enter": 0.0,         +
                                         "exec_total": 0.0,         +
                                         "exec_startup": 0.0        +
                                     }                              +
                                 }                                  +
                             },                                     +
                             "Actual Loops": 0,                     +
                             "Startup Cost": 0.0,                   +
                             "exec_startup": 0.0,                   +
                             "Parallel Aware": false,               +
                             "Local Hit Blocks": 0,                 +
                             "Temp Read Blocks": 0,                 +
                             "Actual Total Time": 0.0,              +
                             "Local Read Blocks": 0,                +
                             "Shared Hit Blocks": 0,                +
                             "Shared Read Blocks": 0,               +
                             "Actual Startup Time": 0.0,            +
                             "Parent Relationship": "Outer",        +
                             "Temp Written Blocks": 0,              +
                             "Local Dirtied Blocks": 0,             +
                             "Local Written Blocks": 0,             +
                             "Shared Dirtied Blocks": 0,            +
                             "Shared Written Blocks": 0             +
                         }                                          +
                     ],                                             +
                     "Output": [                                    +
                         "unique1",                                 +
                         "unique2",                                 +
                         "two",                                     +
                         "four",                                    +
                         "ten",                                     +
                         "twenty",                                  +
                         "hundred",                                 +
                         "thousand",                                +
                         "twothousand",                             +
                         "fivethous",                               +
                         "tenthous",                                +
                         "odd",                                     +
                         "even",                                    +
                         "stringu1",                                +
                         "stringu2",                                +
                         "string4"                                  +
                     ],                                             +
                     "Node Type": "Gather Merge",                   +
                     "Plan Rows": 0,                                +
                     "Plan Width": 0,                               +
                     "Total Cost": 0.0,                             +
                     "exec_enter": 0.0,                             +
                     "exec_total": 0.0,                             +
                     "Actual Rows": 0,                              +
                     "worker_info": {                               +
                     },                                             +
                     "Actual Loops": 0,                             +
                     "Startup Cost": 0.0,                           +
                     "exec_startup": 0.0,                           +
                     "Parallel Aware": false,                       +
                     "Workers Planned": 0,                          +
                     "Local Hit Blocks": 0,                         +
                     "Temp Read Blocks": 0,                         +
                     "Actual Total Time": 0.0,                      +
                     "Local Read Blocks": 0,                        +
                     "Shared Hit Blocks": 0,                        +
                     "Shared Read Blocks": 0,                       +
                     "Actual Startup Time": 0.0,                    +
                     "Parent Relationship": "Outer",                +
                     "Temp Written Blocks": 0,                      +
                     "Local Dirtied Blocks": 0,                     +
                     "Local Written Blocks": 0,                     +
                     "Shared Dirtied Blocks": 0,                    +
                     "Shared Written Blocks": 0                     +
                 }                                                  +
             ],                                                     +
             "Output": [                                            +
                 "unique1",                                         +
                 "unique2",                                         +
                 "two",                                             +
                 "four",                                            +
                 "ten",                                             +
                 "twenty",                                          +
                 "hundred",                                         +
                 "thousand",                                        +
                 "twothousand",                                     +
                 "fivethous",                                       +
                 "tenthous",                                        +
                 "odd",                                             +
                 "even",                                            +
                 "stringu1",                                        +
                 "stringu2",                                        +
                 "string4"                                          +
             ],                                                     +
             "Node List": [                                         +
                 "datanode_1",                                      +
                 "datanode_2"                                       +
             ],                                                     +
             "Node Type": "Remote Subquery Scan",                   +
             "Plan Rows": 0,                                        +
             "Plan Width": 0,                                       +
             "Replicated": "no",                                    +
             "Total Cost": 0.0,                                     +
             "exec_enter": 0.0,                                     +
             "exec_total": 0.0,                                     +
             "Actual Rows": 0,                                      +
             "worker_info": {                                       +
             },                                                     +
             "Actual Loops": 0,                                     +
             "Startup Cost": 0.0,                                   +
             "exec_startup": 0.0,                                   +
             "Parallel Aware": false,                               +
             "Local Hit Blocks": 0,                                 +
             "Temp Read Blocks": 0,                                 +
             "Actual Total Time": 0.0,                              +
             "Local Read Blocks": 0,                                +
             "Shared Hit Blocks": 0,                                +
             "Shared Read Blocks": 0,                               +
             "Actual Startup Time": 0.0,                            +
             "Temp Written Blocks": 0,                              +
             "Local Dirtied Blocks": 0,                             +
             "Local Written Blocks": 0,                             +
             "Shared Dirtied Blocks": 0,                            +
             "Shared Written Blocks": 0                             +
         },                                                         +
         "Planning": {                                              +
             "Local Hit Blocks": 0,                                 +
             "Temp Read Blocks": 0,                                 +
             "Local Read Blocks": 0,                                +
             "Shared Hit Blocks": 0,                                +
             "Shared Read Blocks": 0,                               +
             "Temp Written Blocks": 0,                              +
             "Local Dirtied Blocks": 0,                             +
             "Local Written Blocks": 0,                             +
             "Shared Dirtied Blocks": 0,                            +
             "Shared Written Blocks": 0                             +
         },                                                         +
         "Triggers": [                                              +
         ],                                                         +
         "Planning Time": 0.0,                                      +
         "Execution Time": 0.0                                      +
     }                                                              +
 ]
(1 row)

rollback;
-- OPENTENBASE
-- explain with query_mem setting
set work_mem = '2MB';
set query_mem = '64MB';
set enable_indexonlyscan to off;
select explain_filter('explain (summary) select * from tenk1 order by tenthous');
                              explain_filter                               
---------------------------------------------------------------------------
 Remote Subquery Scan on all (datanodes N)  (cost=N.N..N.N rows=N width=N)
   Sort Key: tenthous
   ->  Sort  (cost=N.N..N.N rows=N width=N)
         Sort Key: tenthous
         ->  Seq Scan on tenk1  (cost=N.N..N.N rows=N width=N)
 Planning Time: N.N ms
 Query Memory: planned query_mem NMB work_mem NMB
(7 rows)

select explain_filter('explain (analyze) select * from tenk1 order by tenthous');
                                                 explain_filter                                                  
-----------------------------------------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanodes N)  (cost=N.N..N.N rows=N width=N) (actual time=N.N..N.N rows=N loops=N)
   Recv Memory Usage: NkB  Total Pages: N
   Sort Key: tenthous
   DN (actual startup time=N.N..N.N total time=N.N..N.N rows=N..N loops=N..N)
   Executor Memory: min NkB max NkB avg NkB  Send Memory Usage: min NkB max NkB avg NkB
   ->  Sort  (cost=N.N..N.N rows=N width=N)
         DN (actual startup time=N.N..N.N total time=N.N..N.N rows=N..N loops=N..N)
         Sort Key: tenthous
         Sort Disk: min NkB max NkB avg NkB
         ->  Seq Scan on tenk1  (cost=N.N..N.N rows=N width=N)
               DN (actual startup time=N.N..N.N total time=N.N..N.N rows=N..N loops=N..N)
 Planning Time: N.N ms
 Query Memory: planned query_mem NMB work_mem NMB execution query_mem NMB
 Execution Time: N.N ms
(14 rows)

set work_mem = '1MB';
set max_query_mem = '32MB';
show query_mem;
 query_mem 
-----------
 32MB
(1 row)

select explain_filter('explain (summary) select tenthous,count(*) from tenk1 group by tenthous');
                                    explain_filter                                     
---------------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanodes N)  (cost=N.N..N.N rows=N width=N)
   ->  HashAggregate  (cost=N.N..N.N rows=N width=N)
         Group Key: tenthous
         ->  Remote Subquery Scan on all (datanodes N)  (cost=N.N..N.N rows=N width=N)
               Distribute results by S: tenthous
               ->  Seq Scan on tenk1  (cost=N.N..N.N rows=N width=N)
 Planning Time: N.N ms
 Query Memory: planned query_mem NMB work_mem NMB
(8 rows)

select explain_filter('explain (analyze) select tenthous,count(*) from tenk1 group by tenthous');
                                                 explain_filter                                                  
-----------------------------------------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanodes N)  (cost=N.N..N.N rows=N width=N) (actual time=N.N..N.N rows=N loops=N)
   Recv Memory Usage: NkB  Total Pages: N
   DN (actual startup time=N.N..N.N total time=N.N..N.N rows=N..N loops=N..N)
   Executor Memory: min NkB max NkB avg NkB  Send Memory Usage: min NkB max NkB avg NkB
   ->  HashAggregate  (cost=N.N..N.N rows=N width=N)
         DN (actual startup time=N.N..N.N total time=N.N..N.N rows=N..N loops=N..N)
         Group Key: tenthous
         Batches: min N max N avg N  Memory Usage: min NkB max NkB avg NkB  Disk Usage: min NkB max NkB avg NkB
         ->  Remote Subquery Scan on all (datanodes N)  (cost=N.N..N.N rows=N width=N)
               DN Recv (actual startup time=N.N..N.N total time=N.N..N.N rows=N..N loops=N..N)
               Recv Memory Usage: min NkB max NkB avg NkB
               DN (actual startup time=N.N..N.N total time=N.N..N.N rows=N..N loops=N..N)
               Distribute results by S: tenthous
               Executor Memory: min NkB max NkB avg NkB  Send Memory Usage: min NkB max NkB avg NkB
               ->  Seq Scan on tenk1  (cost=N.N..N.N rows=N width=N)
                     DN (actual startup time=N.N..N.N total time=N.N..N.N rows=N..N loops=N..N)
 Planning Time: N.N ms
 Query Memory: planned query_mem NMB work_mem NMB execution query_mem NMB
 Execution Time: N.N ms
(19 rows)

reset work_mem;
select explain_filter('explain (summary) select tenthous,count(*) from tenk1 group by tenthous');
                                    explain_filter                                     
---------------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanodes N)  (cost=N.N..N.N rows=N width=N)
   ->  HashAggregate  (cost=N.N..N.N rows=N width=N)
         Group Key: tenthous
         ->  Remote Subquery Scan on all (datanodes N)  (cost=N.N..N.N rows=N width=N)
               Distribute results by S: tenthous
               ->  Seq Scan on tenk1  (cost=N.N..N.N rows=N width=N)
 Planning Time: N.N ms
 Query Memory: planned query_mem NMB work_mem NMB
(8 rows)

select explain_filter('explain (analyze) select tenthous,count(*) from tenk1 group by tenthous');
                                                 explain_filter                                                  
-----------------------------------------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanodes N)  (cost=N.N..N.N rows=N width=N) (actual time=N.N..N.N rows=N loops=N)
   Recv Memory Usage: NkB  Total Pages: N
   DN (actual startup time=N.N..N.N total time=N.N..N.N rows=N..N loops=N..N)
   Executor Memory: min NkB max NkB avg NkB  Send Memory Usage: min NkB max NkB avg NkB
   ->  HashAggregate  (cost=N.N..N.N rows=N width=N)
         DN (actual startup time=N.N..N.N total time=N.N..N.N rows=N..N loops=N..N)
         Group Key: tenthous
         Batches: min N max N avg N  Memory Usage: min NkB max NkB avg NkB
         ->  Remote Subquery Scan on all (datanodes N)  (cost=N.N..N.N rows=N width=N)
               DN Recv (actual startup time=N.N..N.N total time=N.N..N.N rows=N..N loops=N..N)
               Recv Memory Usage: min NkB max NkB avg NkB
               DN (actual startup time=N.N..N.N total time=N.N..N.N rows=N..N loops=N..N)
               Distribute results by S: tenthous
               Executor Memory: min NkB max NkB avg NkB  Send Memory Usage: min NkB max NkB avg NkB
               ->  Seq Scan on tenk1  (cost=N.N..N.N rows=N width=N)
                     DN (actual startup time=N.N..N.N total time=N.N..N.N rows=N..N loops=N..N)
 Planning Time: N.N ms
 Query Memory: planned query_mem NMB work_mem NMB execution query_mem NMB
 Execution Time: N.N ms
(19 rows)

reset max_query_mem;
reset query_mem;
reset enable_indexonlyscan;
-- 1020385652099083441
set max_parallel_workers_per_gather=2;
set parallel_tuple_cost to 0;
set parallel_setup_cost to 0;
set min_parallel_table_scan_size to 0;
-- Subquery with InitPlan
CREATE TABLE subquery_with_initplan_base_tbl (a int PRIMARY KEY, b text DEFAULT 'Unspecified');
INSERT INTO subquery_with_initplan_base_tbl SELECT i, 'Row ' || i FROM generate_series(-2, 2) g(i);
CREATE VIEW subquery_with_initplan_view AS SELECT 1 FROM subquery_with_initplan_base_tbl HAVING max(a) > 0;
explain (costs off) select * from subquery_with_initplan_view;
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Result
   One-Time Filter: ($0 > 0)
   InitPlan 1 (returns $0)
     ->  Limit
           ->  Remote Subquery Scan on all (datanodes 2)
                 Sort Key: subquery_with_initplan_base_tbl.a DESC
                 ->  Limit
                       ->  Index Only Scan Backward using subquery_with_initplan_base_tbl_pkey on subquery_with_initplan_base_tbl
                             Index Cond: (a IS NOT NULL)
(9 rows)

select * from subquery_with_initplan_view;
 ?column? 
----------
        1
(1 row)

drop table subquery_with_initplan_base_tbl cascade;
NOTICE:  drop cascades to view subquery_with_initplan_view
/* test FQS explain output for json and yaml format */
set enable_fast_query_shipping = on;
DROP TABLE IF EXISTS test_fqs_output;
NOTICE:  table "test_fqs_output" does not exist, skipping
CREATE TABLE test_fqs_output(a INT, b INT);
EXPLAIN (format json, costs off) SELECT * FROM test_fqs_output;
                     QUERY PLAN                      
-----------------------------------------------------
 [                                                  +
   {                                                +
     "Plan": {                                      +
       "Node Type": "Remote Fast Query Execution",  +
       "Parallel Aware": false,                     +
       "Node/s": "datanode_1, datanode_2",          +
       "Remote plan": [                             +
         {                                          +
           "Plan": {                                +
             "Node Type": "Gather",                 +
             "Parallel Aware": false,               +
             "Workers Planned": 2,                  +
             "Single Copy": false,                  +
             "Plans": [                             +
               {                                    +
                 "Node Type": "Seq Scan",           +
                 "Parent Relationship": "Outer",    +
                 "Parallel Aware": true,            +
                 "Relation Name": "test_fqs_output",+
                 "Alias": "test_fqs_output"         +
               }                                    +
             ]                                      +
           }                                        +
         }                                          +
       ]                                            +
                                                    +
     }                                              +
   }                                                +
 ]
(1 row)

EXPLAIN (format yaml, costs off) SELECT * FROM test_fqs_output;
                  QUERY PLAN                  
----------------------------------------------
 - Plan:                                     +
     Node Type: "Remote Fast Query Execution"+
     Parallel Aware: false                   +
     Node/s: "datanode_1, datanode_2"        +
     Remote plan: - Plan:                    +
         Node Type: "Gather"                 +
         Parallel Aware: false               +
         Workers Planned: 2                  +
         Single Copy: false                  +
         Plans:                              +
           - Node Type: "Seq Scan"           +
             Parent Relationship: "Outer"    +
             Parallel Aware: true            +
             Relation Name: "test_fqs_output"+
             Alias: "test_fqs_output"        +
     
(1 row)

DROP TABLE test_fqs_output;
reset enable_fast_query_shipping;
