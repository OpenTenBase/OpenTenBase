--
-- Test assorted system views
--
-- This test is mainly meant to provide some code coverage for the
-- set-returning functions that underlie certain system views.
-- The output of most of these functions is very environment-dependent,
-- so our ability to test with fixed expected output is pretty limited;
-- but even a trivial check of count(*) will exercise the normal code path
-- through the SRF.
select count(*) >= 0 as ok from pg_available_extension_versions;
 ok 
----
 t
(1 row)

select count(*) >= 0 as ok from pg_available_extensions;
 ok 
----
 t
(1 row)

-- At introduction, pg_config had 23 entries; it may grow
select count(*) > 20 as ok from pg_config;
 ok 
----
 t
(1 row)

-- We expect no cursors in this test; see also portals.sql
select count(*) = 0 as ok from pg_cursors;
 ok 
----
 t
(1 row)

select count(*) >= 0 as ok from pg_file_settings;
 ok 
----
 t
(1 row)

-- There will surely be at least one rule
select count(*) > 0 as ok from pg_hba_file_rules;
 ok 
----
 t
(1 row)

-- There will surely be at least one active lock
select count(*) > 0 as ok from pg_locks;
 ok 
----
 t
(1 row)

-- We expect no prepared statements in this test; see also prepare.sql
select count(*) = 0 as ok from pg_prepared_statements;
 ok 
----
 t
(1 row)

-- See also prepared_xacts.sql
select count(*) >= 0 as ok from pg_prepared_xacts;
 ok 
----
 t
(1 row)

-- This is to record the prevailing planner enable_foo settings during
-- a regression test run.
select name, setting from pg_settings where name like 'enable%';
                   name                    | setting 
-------------------------------------------+---------
 enable_2pc_entry_key_check                | on
 enable_2pc_entry_trace                    | off
 enable_2pc_error_stop                     | off
 enable_2pc_file_cache                     | on
 enable_2pc_file_check                     | off
 enable_2pc_gts_optimize                   | on
 enable_2pc_optimization                   | off
 enable_2pc_recovery_info                  | on
 enable_audit                              | off
 enable_audit_warning                      | off
 enable_auditlogger_warning                | off
 enable_auto_kill_old_trans                | on
 enable_benchmark_execution                | off
 enable_bitmapscan                         | on
 enable_check_password                     | off
 enable_check_scalar_join                  | on
 enable_clean_2pc_launcher                 | on
 enable_cls                                | on
 enable_committs_print                     | off
 enable_conservative_selec                 | on
 enable_copy_silence                       | off
 enable_create_package_rec_typ             | off
 enable_data_mask                          | on
 enable_datanode_row_triggers              | off
 enable_distri_debug                       | off
 enable_distri_debug_print                 | off
 enable_distri_visibility_print            | off
 enable_eager_free                         | on
 enable_exec_fragment_critical_print       | off
 enable_exec_fragment_print                | off
 enable_experiment_isolation               | on
 enable_experiment_spm                     | on
 enable_fast_query_shipping                | on
 enable_fga                                | on
 enable_filter_statistic                   | on
 enable_function_overload                  | on
 enable_gathermerge                        | on
 enable_global_indexscan                   | on
 enable_gtm_debug_print                    | off
 enable_gtm_proxy                          | off
 enable_gts_check                          | off
 enable_gts_optimize                       | on
 enable_hashagg                            | on
 enable_hashjoin                           | on
 enable_hashjoin_bloom                     | on
 enable_hybrid_sort                        | off
 enable_indexonlyscan                      | on
 enable_indexscan                          | on
 enable_inline_target_function             | off
 enable_lateral_pull_up                    | on
 enable_light_coord                        | on
 enable_lightweight_ora_syntax             | off
 enable_material                           | on
 enable_mergejoin                          | on
 enable_multi_cluster                      | on
 enable_multi_cluster_print                | off
 enable_nestedtable_check                  | on
 enable_nestloop                           | on
 enable_nestloop_suppression               | off
 enable_newhash                            | on
 enable_null_string                        | off
 enable_opentenbase_ora_column_name        | off
 enable_opentenbase_ora_dist_udaf          | off
 enable_opentenbase_ora_implicit_coercion  | on
 enable_parallel_append                    | on
 enable_parallel_hash                      | on
 enable_parallel_insert                    | on
 enable_parallel_sequence                  | off
 enable_parallel_update                    | off
 enable_partition_iterator                 | on
 enable_partition_pruning                  | on
 enable_partitionwise_join                 | off
 enable_pgbouncer                          | off
 enable_pgxcnode_message                   | off
 enable_plpgsql_context_line_num_print     | on
 enable_plpgsql_debug_print                | off
 enable_plpgsql_format_procedure_qualified | off
 enable_pooler_debug_print                 | on
 enable_pooler_size_check                  | on
 enable_pooler_stateless_reuse             | on
 enable_pooler_stuck_exit                  | off
 enable_pooler_thread_log_print            | on
 enable_pullup_expr_agg                    | on
 enable_pullup_expr_agg_update             | off
 enable_pullup_expr_agg_update_noqual      | off
 enable_pullup_expr_distinct               | on
 enable_pullup_subquery                    | on
 enable_pullup_target_casewhen             | on
 enable_push_pred                          | off
 enable_replication_slot_debug             | off
 enable_resource_group                     | off
 enable_resource_queue                     | off
 enable_resource_queue_debug               | off
 enable_result_cache                       | off
 enable_right_semi_or_anti_join            | on
 enable_rightjoin                          | on
 enable_save_datachanged_timestamp         | on
 enable_scalar_subquery_cache              | off
 enable_secfunc_xact                       | on
 enable_seqscan                            | on
 enable_shard_statistic                    | on
 enable_simple_analyze                     | off
 enable_simple_numeric                     | 0
 enable_skip_send_read_commited            | on
 enable_sort                               | on
 enable_sortagg                            | on
 enable_spm                                | on
 enable_spm_alert                          | off
 enable_subquery_shipping                  | on
 enable_threadsafety_check                 | off
 enable_tidscan                            | on
 enable_type_priority_in_ora_mode          | on
(112 rows)

-- Test that the pg_timezone_names and pg_timezone_abbrevs views are
-- more-or-less working.  We can't test their contents in any great detail
-- without the outputs changing anytime IANA updates the underlying data,
-- but it seems reasonable to expect at least one entry per major meridian.
-- (At the time of writing, the actual counts are around 38 because of
-- zones using fractional GMT offsets, so this is a pretty loose test.)
select count(distinct utc_offset) >= 24 as ok from pg_timezone_names;
 ok 
----
 t
(1 row)

select count(distinct utc_offset) >= 24 as ok from pg_timezone_abbrevs;
 ok 
----
 t
(1 row)

-- Let's check the non-default timezone abbreviation sets, too
set timezone_abbreviations = 'Australia';
select count(distinct utc_offset) >= 24 as ok from pg_timezone_abbrevs;
 ok 
----
 t
(1 row)

set timezone_abbreviations = 'India';
select count(distinct utc_offset) >= 24 as ok from pg_timezone_abbrevs;
 ok 
----
 t
(1 row)

