------------------------------------------
-- Test cases for opentenbase_ora raw type.
------------------------------------------
\c regression_ora
--------------------------
-- test raw
--------------------------
drop table if exists t1;
NOTICE:  table "T1" does not exist, skipping
create table t1 (id number, doc raw(2001));
ERROR:  specified length too long for its datatype.
LINE 1: create table t1 (id number, doc raw(2001));
                                        ^
drop table if exists t1;
NOTICE:  table "T1" does not exist, skipping
create table t1 (a int, b raw(3), c long raw);
\d t1
                 Table "public.T1"
 Column |   Type   | Collation | Nullable | Default 
--------+----------+-----------+----------+---------
 A      | INTEGER  |           |          | 
 B      | RAW(3)   |           |          | 
 C      | LONG RAW |           |          | 

insert into t1 values(1 ,'123', '123');
insert into t1 values(1 ,'1234', '123');
insert into t1 values(1 ,'123', '1234');
select * from t1;
ERROR:  inconsistent datatypes: expected CHAR got LONG BINARY
drop table if exists t1;
-- agg
create table tb4(a raw(10), b raw(10), c int);
insert into tb4 values('123', '456', 1);
insert into tb4 values('123', '456', 1);
insert into tb4 values('123a', '456a', 1);
insert into tb4 values('123a', '456a', 2);
select max(a) from tb4;
 MAX  
------
 123A
(1 row)

select min(a) from tb4;
 MIN  
------
 0123
(1 row)

-- hash
drop table if exists raw_test2;
NOTICE:  table "RAW_TEST2" does not exist, skipping
create table raw_test2(a raw(10), b varchar(20), c int);
create index raw_test2_index on raw_test2 using btree (a);
create index raw_test2_index2 on raw_test2 using hash (a);
\d raw_test2
                    Table "public.RAW_TEST2"
 Column |         Type          | Collation | Nullable | Default 
--------+-----------------------+-----------+----------+---------
 A      | RAW(10)               |           |          | 
 B      | CHARACTER VARYING(20) |           |          | 
 C      | INTEGER               |           |          | 
Indexes:
    "RAW_TEST2_INDEX" btree (A) WITH (checksum='on')
    "RAW_TEST2_INDEX2" hash (A) WITH (checksum='on')

drop table if exists raw_test2;
-- base type
create table test_raw (r raw(20));
insert into test_raw values ('a');
insert into test_raw values ('b');
insert into test_raw values ('s');
ERROR:  invalid hexadecimal digit: "s"
LINE 1: insert into test_raw values ('s');
                                     ^
insert into test_raw values ('as');
ERROR:  invalid hexadecimal digit: "s"
LINE 1: insert into test_raw values ('as');
                                     ^
insert into test_raw values ('c');
insert into test_raw values ('f');
insert into test_raw values ('dd');
insert into test_raw values ('d');
insert into test_raw values ('e');
insert into test_raw values ('12');
select r from test_raw order by r desc;
 R  
----
 DD
 12
 0F
 0E
 0D
 0C
 0B
 0A
(8 rows)

select r from test_raw order by r asc;
 R  
----
 0A
 0B
 0C
 0D
 0E
 0F
 12
 DD
(8 rows)

drop table test_raw;
create table test_raw (a raw(1), b raw(1));
insert into test_raw values ('a', 'a');
insert into test_raw values ('b', 'c');
insert into test_raw values ('d', '9');
insert into test_raw values ('6', '6');
insert into test_raw values ('5', 'f');
select * from test_raw where a < b order by a desc;
 A  | B  
----+----
 0B | 0C
 05 | 0F
(2 rows)

select * from test_raw where a > b order by b asc;
 A  | B  
----+----
 0D | 09
(1 row)

select * from test_raw where a < b or a > b order by a desc;
 A  | B  
----+----
 0D | 09
 0B | 0C
 05 | 0F
(3 rows)

select * from test_raw where a < b or a > b order by a asc;
 A  | B  
----+----
 05 | 0F
 0B | 0C
 0D | 09
(3 rows)

select * from test_raw where a = b order by a desc;
 A  | B  
----+----
 0A | 0A
 06 | 06
(2 rows)

select * from test_raw where a = b order by a asc;
 A  | B  
----+----
 06 | 06
 0A | 0A
(2 rows)

select * from test_raw where a >= b order by a desc;
 A  | B  
----+----
 0D | 09
 0A | 0A
 06 | 06
(3 rows)

select * from test_raw where a >= b order by a asc;
 A  | B  
----+----
 06 | 06
 0A | 0A
 0D | 09
(3 rows)

select * from test_raw where a <= b order by a desc;
 A  | B  
----+----
 0B | 0C
 0A | 0A
 06 | 06
 05 | 0F
(4 rows)

select * from test_raw where a <= b order by a asc;
 A  | B  
----+----
 05 | 0F
 06 | 06
 0A | 0A
 0B | 0C
(4 rows)

drop table test_raw;
create table test_raw1 (a raw(1), b raw(1));
create table test_raw2 (a raw(1), b raw(1));
insert into test_raw1 values ('a', 'a');
insert into test_raw1 values ('b', '4');
insert into test_raw1 values ('2', '9');
insert into test_raw1 values ('6', '6');
insert into test_raw1 values ('5', 'e');
insert into test_raw2 values ('a', 'a');
insert into test_raw2 values ('d', 'c');
insert into test_raw2 values ('d', '9');
insert into test_raw2 values ('2', '6');
insert into test_raw2 values ('1', 'f');
select * from test_raw1 where a like 'd';
 A | B 
---+---
(0 rows)

select * from test_raw1 test1 cross join test_raw2 test2 where test1.a = test2.b order by 1,2;
 A  | B  | A  | B  
----+----+----+----
 06 | 06 | 02 | 06
 0A | 0A | 0A | 0A
(2 rows)

select * from test_raw1 test1 join test_raw2 test2 using(a) order by 1;
 A  | B  | B  
----+----+----
 02 | 09 | 06
 0A | 0A | 0A
(2 rows)

select * from test_raw1 test1 full join test_raw2 test2 using(a) order by 1,2,3;
 A  | B  | B  
----+----+----
 01 |    | 0F
 02 | 09 | 06
 05 | 0E | 
 06 | 06 | 
 0A | 0A | 0A
 0B | 04 | 
 0D |    | 09
 0D |    | 0C
(8 rows)

select * from test_raw1 test1 left join test_raw2 test2 using(a) order by 1,2,3;
 A  | B  | B  
----+----+----
 02 | 09 | 06
 05 | 0E | 
 06 | 06 | 
 0A | 0A | 0A
 0B | 04 | 
(5 rows)

select * from test_raw1 test1 right join test_raw2 test2 using(a) order by 1,2,3;
 A  | B  | B  
----+----+----
 01 |    | 0F
 02 | 09 | 06
 0A | 0A | 0A
 0D |    | 09
 0D |    | 0C
(5 rows)

select * from test_raw1 test1 inner join test_raw2 test2 using(a) order by 1,2,3;
 A  | B  | B  
----+----+----
 02 | 09 | 06
 0A | 0A | 0A
(2 rows)

select * from test_raw1 test1 inner join test_raw2 test2 using(a) order by 1,2,3;
 A  | B  | B  
----+----+----
 02 | 09 | 06
 0A | 0A | 0A
(2 rows)

select * from test_raw1 test1 natural join test_raw2 test2;
 A  | B  
----+----
 0A | 0A
(1 row)

drop table test_raw1;
drop table test_raw2;
-- opentenbase_ora raw support '\\'
select rawtohex('\') from dual;
 RAWTOHEX 
----------
 5C
(1 row)

select rawtohex('\\') from dual;
 RAWTOHEX 
----------
 5C5C
(1 row)

select rawtohex('\-') from dual;
 RAWTOHEX 
----------
 5C2D
(1 row)

-- opentenbase_ora rawtohex support number/int
select rawtohex(0) from dual;
 RAWTOHEX 
----------
 80
(1 row)

select rawtohex(1) from dual;
 RAWTOHEX 
----------
 C102
(1 row)

select rawtohex(2) from dual;
 RAWTOHEX 
----------
 C103
(1 row)

select rawtohex(3) from dual;
 RAWTOHEX 
----------
 C104
(1 row)

select rawtohex(4) from dual;
 RAWTOHEX 
----------
 C105
(1 row)

select rawtohex(5) from dual;
 RAWTOHEX 
----------
 C106
(1 row)

select rawtohex(-1) from dual;
 RAWTOHEX 
----------
 3E6466
(1 row)

select rawtohex(-2) from dual;
 RAWTOHEX 
----------
 3E6366
(1 row)

select rawtohex(-3) from dual;
 RAWTOHEX 
----------
 3E6266
(1 row)

select rawtohex(-4) from dual;
 RAWTOHEX 
----------
 3E6166
(1 row)

select rawtohex(-5) from dual;
 RAWTOHEX 
----------
 3E6066
(1 row)

select rawtohex(1) from dual;
 RAWTOHEX 
----------
 C102
(1 row)

select rawtohex(11) from dual;
 RAWTOHEX 
----------
 C10C
(1 row)

select rawtohex(111) from dual;
 RAWTOHEX 
----------
 C2020C
(1 row)

select rawtohex(1111) from dual;
 RAWTOHEX 
----------
 C20C0C
(1 row)

select rawtohex(-1) from dual;
 RAWTOHEX 
----------
 3E6466
(1 row)

select rawtohex(-11) from dual;
 RAWTOHEX 
----------
 3E5A66
(1 row)

select rawtohex(-111) from dual;
 RAWTOHEX 
----------
 3D645A66
(1 row)

select rawtohex(-1111) from dual;
 RAWTOHEX 
----------
 3D5A5A66
(1 row)

select rawtohex(1) from dual;
 RAWTOHEX 
----------
 C102
(1 row)

select rawtohex(12) from dual;
 RAWTOHEX 
----------
 C10D
(1 row)

select rawtohex(123) from dual;
 RAWTOHEX 
----------
 C20218
(1 row)

select rawtohex(1234) from dual;
 RAWTOHEX 
----------
 C20D23
(1 row)

select rawtohex(12345) from dual;
 RAWTOHEX 
----------
 C302182E
(1 row)

select rawtohex(-1) from dual;
 RAWTOHEX 
----------
 3E6466
(1 row)

select rawtohex(-12) from dual;
 RAWTOHEX 
----------
 3E5966
(1 row)

select rawtohex(-123) from dual;
 RAWTOHEX 
----------
 3D644E66
(1 row)

select rawtohex(-1234) from dual;
 RAWTOHEX 
----------
 3D594366
(1 row)

select rawtohex(-12345) from dual;
  RAWTOHEX  
------------
 3C644E3866
(1 row)

select rawtohex(1.1) from dual;
 RAWTOHEX 
----------
 C1020B
(1 row)

select rawtohex(1.12) from dual;
 RAWTOHEX 
----------
 C1020D
(1 row)

select rawtohex(1.123) from dual;
 RAWTOHEX 
----------
 C1020D1F
(1 row)

select rawtohex(1.1234) from dual;
 RAWTOHEX 
----------
 C1020D23
(1 row)

select rawtohex(1.1) from dual;
 RAWTOHEX 
----------
 C1020B
(1 row)

select rawtohex(-1.1) from dual;
 RAWTOHEX 
----------
 3E645B66
(1 row)

select rawtohex(-1.12) from dual;
 RAWTOHEX 
----------
 3E645966
(1 row)

select rawtohex(-1.123) from dual;
  RAWTOHEX  
------------
 3E64594766
(1 row)

select rawtohex(-1.1234) from dual;
  RAWTOHEX  
------------
 3E64594366
(1 row)

select rawtohex(-1.1) from dual;
 RAWTOHEX 
----------
 3E645B66
(1 row)

select rawtohex(0.1) from dual;
 RAWTOHEX 
----------
 C00B
(1 row)

select rawtohex(0.12) from dual;
 RAWTOHEX 
----------
 C00D
(1 row)

select rawtohex(0.123) from dual;
 RAWTOHEX 
----------
 C00D1F
(1 row)

select rawtohex(0.1234) from dual;
 RAWTOHEX 
----------
 C00D23
(1 row)

select rawtohex(-0.1) from dual;
 RAWTOHEX 
----------
 3F5B66
(1 row)

select rawtohex(-0.12) from dual;
 RAWTOHEX 
----------
 3F5966
(1 row)

select rawtohex(-0.123) from dual;
 RAWTOHEX 
----------
 3F594766
(1 row)

select rawtohex(-0.1234) from dual;
 RAWTOHEX 
----------
 3F594366
(1 row)

select rawtohex(-0.1) from dual;
 RAWTOHEX 
----------
 3F5B66
(1 row)

-- Only one long(long raw) type is allowed in a table
drop table if exists t_src;
NOTICE:  table "T_SRC" does not exist, skipping
drop table if exists t_dst;
NOTICE:  table "T_DST" does not exist, skipping
create table t_src(a int, b raw);
ERROR:  missing left parenthesis.
create table t_src(a int, b long raw, c long raw);
ERROR:  Only one "long" type is allowed in a table
create table t_src(a int, b raw(100));
create table t_dst as select * from t_src;
alter table t_dst add column c raw;
ERROR:  missing left parenthesis.
alter table t_dst add column d long raw;
alter table t_dst add column e long raw;
ERROR:  Only one "long" type is allowed in a table
drop table t_src;
drop table t_dst;
-- type long raw no support op '||'
drop table if exists test_raw;
NOTICE:  table "TEST_RAW" does not exist, skipping
create table test_raw(f1 int,f2 long raw);
insert into test_raw values(1,'1');
select count(f2) from test_raw;
ERROR:  illegal use of LONG datatype
select f2 || 'opentenbase' from test_raw;
ERROR:  inconsistent datatypes: expected CHAR got LRAW
select f2 || f2 from test_raw;
ERROR:  inconsistent datatypes: expected CHAR got LRAW
select * from test_raw;
ERROR:  inconsistent datatypes: expected CHAR got LONG BINARY
select f1 from test_raw;
 F1 
----
  1
(1 row)

drop table test_raw;
-- disable function has long raw parameter
create table test_raw(f1 int,f2 long raw);
insert into test_raw values(1, '123');
select f2 from test_raw;
ERROR:  inconsistent datatypes: expected CHAR got LONG BINARY
select * from test_raw ;
ERROR:  inconsistent datatypes: expected CHAR got LONG BINARY
select sum(f2) from test_raw;
ERROR:  illegal use of LONG datatype
select rawtohex(f2) from test_raw order by f1;
ERROR:  illegal use of LONG datatype
select hextoraw(rawtohex(f2)) from test_raw order by f1;
ERROR:  illegal use of LONG datatype
insert into test_raw values(17,'A');
select ascii(f2) from test_raw where f1=17;
ERROR:  illegal use of LONG datatype
create index test_raw_i1 on test_raw(lower(f2));
ERROR:  illegal use of LONG datatype
create index test_raw_i2 on test_raw(upper(f2));
ERROR:  illegal use of LONG datatype
-- disable craete materialized view as select long raw
create MATERIALIZED view test_raw_mv as select f2 as nc from test_raw;
ERROR:  "long" type can't in materialized view
drop view test_raw_mv;
ERROR:  view "TEST_RAW_MV" does not exist
drop table test_raw;
-- add from v5
select rawtohex(hextoraw('aaaa')) from dual;
 RAWTOHEX 
----------
 AAAA
(1 row)

select rawtohex('AA') from dual;
 RAWTOHEX 
----------
 4141
(1 row)

select rawtohex(AA) from dual;
ERROR:  column "AA" does not exist
LINE 1: select rawtohex(AA) from dual;
                        ^
select rawtohex('11') FROM dual;
 RAWTOHEX 
----------
 3131
(1 row)

select rawtohex(11) FROM dual;
 RAWTOHEX 
----------
 C10C
(1 row)

select rawtohex() from dual;
ERROR:  function RAWTOHEX() does not exist
LINE 1: select rawtohex() from dual;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select hextoraw('abcdef') from dual;
 HEXTORAW 
----------
 ABCDEF
(1 row)

select hextoraw('abcdefg') from dual;
ERROR:  invalid hexadecimal digit: "g"
select hextoraw('') from dual;
 HEXTORAW 
----------
 
(1 row)

select hextoraw(null) from dual;
 HEXTORAW 
----------
 
(1 row)

select hextoraw('01234548787987897') from dual;
      HEXTORAW      
--------------------
 001234548787987897
(1 row)

