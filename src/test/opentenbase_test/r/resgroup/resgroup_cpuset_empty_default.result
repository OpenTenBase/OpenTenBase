-- A regression test for cpuset.
--
-- When all the cpu cores are allocated the default cpuset group should
-- fallback to core 0.  However this fallback logic was only added on
-- CREATE / ALTER RESOURCE GROUP, but missing in startup logic, an empty cpu
-- core list "" is set to cgroup and cause a runtime error:
--
--     can't write data to file '/sys/fs/cgroup/cpuset/gpdb/1/cpuset.cpus':
--       No space left on device (resgroup-ops-linux.c:916)
--
-- To trigger the issue we create a resource group, allocate all the cpu cores
-- to it, and restart the cluster.
DROP RESOURCE GROUP rg1_cpuset_test;
ERROR:  (42704) resource group "rg1_cpuset_test" does not exist
-- Create a resource group with all the cpu cores.
CREATE RESOURCE GROUP rg1_cpuset_test WITH cpuset '0-15';
CREATE RESOURCE GROUP
-- Alter a resource group from / to all the cpu cores should also work.
ALTER RESOURCE GROUP rg1_cpuset_test SET cpuset '0';
ALTER RESOURCE GROUP
ALTER RESOURCE GROUP rg1_cpuset_test SET cpuset '0-15';
ALTER RESOURCE GROUP
select groupname,concurrency,cpu_rate_limit,memory_limit,cpuset from pg_resgroup_config where groupname='rg1_cpuset_test';
    groupname    | concurrency | cpu_rate_limit | memory_limit | cpuset 
-----------------+-------------+----------------+--------------+--------
 rg1_cpuset_test | 20          | -1             | -1           | 0-15
(1 row)

-- Cleanup in a new connection as the default one is disconnected by gpstop
DROP RESOURCE GROUP rg1_cpuset_test;
DROP RESOURCE GROUP
