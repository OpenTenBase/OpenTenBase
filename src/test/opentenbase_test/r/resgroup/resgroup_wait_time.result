create default node group default_group with ("dn1", "dn2");
CREATE NODE GROUP
create sharding group to group default_group;
CREATE SHARDING GROUP
clean sharding;
CLEAN SHARDING
create table t(a int, b int);
CREATE TABLE
grant all on t to public;
GRANT
create resource group rg_wait_time_test with concurrency 2 cpu_rate_limit 20;
CREATE RESOURCE GROUP
create role role_wait_time_test resource group rg_wait_time_test;
CREATE ROLE
set role role_wait_time_test;
SET
set opentenbase_test_flag='suspend_after_resgroup_assignedconn1';
SET
 select count(*) from t;
set role role_wait_time_test;
SET
set opentenbase_test_flag='suspend_after_resgroup_assignedconn2';
SET
 select count(*) from t;
set role role_wait_time_test;
SET
-- this group only has two concurrency, the below SQL will be put in wait queue
set opentenbase_test_flag='suspend_after_resgroup_assignedconn3';
SET
 select count(*) from t;
select pg_sleep(2);
 pg_sleep 
----------
 
(1 row)

-- commit the 1st transaction to unblock 3
-- so 3 will record its wait time
 count 
-------
     0
(1 row)

 count 
-------
     0
(1 row)

 count 
-------
     0
(1 row)

SELECT (total_queue_duration::json->0->>'cn1')::int > 2000000 waited
from pg_resgroup_status where groupname = 'rg_wait_time_test';
 waited 
--------
 t
(1 row)

drop role role_wait_time_test;
DROP ROLE
drop resource group rg_wait_time_test;
DROP RESOURCE GROUP
create resource group rg_wait_time_test with concurrency 2 cpu_rate_limit 20;
CREATE RESOURCE GROUP
create role role_wait_time_test resource group rg_wait_time_test;
CREATE ROLE
set role role_wait_time_test;
SET
set opentenbase_test_flag='suspend_after_resgroup_assignedconn1';
SET
 select count(*) from t;
set role role_wait_time_test;
SET
set opentenbase_test_flag='suspend_after_resgroup_assignedconn2';
SET
 select count(*) from t;
set role role_wait_time_test;
SET
-- this group only has two concurrency, the below SQL will be put in wait queue
set opentenbase_test_flag='suspend_after_resgroup_assignedconn3';
SET
 select count(*) from t;
select pg_sleep(2);
 pg_sleep 
----------
 
(1 row)

select pg_terminate_backend(pid)
from pg_stat_activity
where rsgname = 'rg_wait_time_test' and wait_event_type = 'ResourceGroup';
 pg_terminate_backend 
----------------------
 t
(1 row)

 count 
-------
     0
(1 row)

 count 
-------
     0
(1 row)

FATAL:  (57P01) terminating connection due to administrator command
server closed the connection unexpectedly
	This probably means the server terminated abnormally
	before or while processing the request.
connection to server was lost
SELECT (total_queue_duration::json->0->>'cn1')::int > 2000000 waited
from pg_resgroup_status where groupname = 'rg_wait_time_test';
 waited 
--------
 t
(1 row)

-- clean up
drop role role_wait_time_test;
DROP ROLE
drop resource group rg_wait_time_test;
DROP RESOURCE GROUP
