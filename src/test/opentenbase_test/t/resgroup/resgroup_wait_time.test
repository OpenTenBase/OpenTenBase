%cn 1
%cn_slave 0
%dn 2
%dn_slave 0
%gtm 1
%gtm_slave 0

connect conn cn1
connection conn

create default node group default_group with ("dn1", "dn2");
create sharding group to group default_group;
clean sharding;
create table t(a int, b int);
grant all on t to public;


create resource group rg_wait_time_test with concurrency 2 cpu_rate_limit 20;
create role role_wait_time_test resource group rg_wait_time_test;

connect conn1 cn1
connection conn1
set role role_wait_time_test;
set opentenbase_test_flag='suspend_after_resgroup_assignedconn1';
sendblock select count(*) from t;

connect conn2 cn1
connection conn2
set role role_wait_time_test;
set opentenbase_test_flag='suspend_after_resgroup_assignedconn2';
sendblock select count(*) from t;

connect conn3 cn1
connection conn3
set role role_wait_time_test;
-- this group only has two concurrency, the below SQL will be put in wait queue
set opentenbase_test_flag='suspend_after_resgroup_assignedconn3';
sendblock select count(*) from t;

connection conn
select pg_sleep(2);

-- commit the 1st transaction to unblock 3
-- so 3 will record its wait time

execute_shell_cmd rm /tmp/suspend_after_resgroup_assignedconn1
execute_shell_cmd rm /tmp/suspend_after_resgroup_assignedconn2
reap conn1
reap conn2

sleep 2

execute_shell_cmd rm /tmp/suspend_after_resgroup_assignedconn3
reap conn3

connection conn
SELECT (total_queue_duration::json->0->>'cn1')::int > 2000000 waited
from pg_resgroup_status where groupname = 'rg_wait_time_test';


disconnect conn1
disconnect conn2
disconnect conn3

sleep 5

connection conn
drop role role_wait_time_test;
drop resource group rg_wait_time_test;

create resource group rg_wait_time_test with concurrency 2 cpu_rate_limit 20;
create role role_wait_time_test resource group rg_wait_time_test;


connect conn1 cn1
connection conn1
set role role_wait_time_test;
set opentenbase_test_flag='suspend_after_resgroup_assignedconn1';
sendblock select count(*) from t;

connect conn2 cn1
connection conn2
set role role_wait_time_test;
set opentenbase_test_flag='suspend_after_resgroup_assignedconn2';
sendblock select count(*) from t;

connect conn3 cn1
connection conn3
set role role_wait_time_test;
-- this group only has two concurrency, the below SQL will be put in wait queue
set opentenbase_test_flag='suspend_after_resgroup_assignedconn3';
sendblock select count(*) from t;

connection conn
select pg_sleep(2);

select pg_terminate_backend(pid)
from pg_stat_activity
where rsgname = 'rg_wait_time_test' and wait_event_type = 'ResourceGroup';

execute_shell_cmd rm /tmp/suspend_after_resgroup_assignedconn1
execute_shell_cmd rm /tmp/suspend_after_resgroup_assignedconn2
reap conn1
reap conn2

sleep 2

execute_shell_cmd rm /tmp/suspend_after_resgroup_assignedconn3
reap conn3


connection conn
SELECT (total_queue_duration::json->0->>'cn1')::int > 2000000 waited
from pg_resgroup_status where groupname = 'rg_wait_time_test';

sleep 5

-- clean up
drop role role_wait_time_test;
drop resource group rg_wait_time_test;
